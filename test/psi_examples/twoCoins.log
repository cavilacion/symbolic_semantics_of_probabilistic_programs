def main() {
UNIFORM_1 := uniform(0,1);
UNIFORM_0 := uniform(0,1);
assert((UNIFORM_0) < ((1/2)));
assert((UNIFORM_1) < ((1/2)));
def main() {
UNIFORM_1 := uniform(0,1);
UNIFORM_0 := uniform(0,1);
assert(!(((1) != (0)) && ((1) != (0))));
def main() {
UNIFORM_1 := uniform(0,1);
UNIFORM_0 := uniform(0,1);
assert((UNIFORM_0) < ((1/2)));
assert(!((UNIFORM_1) < ((1/2))));
def main() {
UNIFORM_1 := uniform(0,1);
UNIFORM_0 := uniform(0,1);
assert(!(((1) != (0)) && ((0) != (0))));
def main() {
UNIFORM_1 := uniform(0,1);
UNIFORM_0 := uniform(0,1);
assert(!((UNIFORM_0) < ((1/2))));
assert((UNIFORM_1) < ((1/2)));
def main() {
UNIFORM_1 := uniform(0,1);
UNIFORM_0 := uniform(0,1);
assert(!(((0) != (0)) && ((1) != (0))));
def main() {
UNIFORM_1 := uniform(0,1);
UNIFORM_0 := uniform(0,1);
assert(!((UNIFORM_0) < ((1/2))));
assert(!((UNIFORM_1) < ((1/2))));
def main() {
UNIFORM_1 := uniform(0,1);
UNIFORM_0 := uniform(0,1);
assert(!(((0) != (0)) && ((0) != (0))));
Number of Paths: 4
Path 1:
	Path Condition: UNIFORM_0 < 1/2 ∧ ¬(UNIFORM_1 < 1/2)
	Probability:  1/4
	Observations: ¬(1 ≠ 0 ∧ 0 ≠ 0)
	Observations Probability:  1
	Sigma: σ(bothHeads) = 1 ≠ 0 ∧ 0 ≠ 0, σ(firstCoin) = 1, σ(secondCoin) = 0
	Terminated: No
Path 2:
	Path Condition: ¬(UNIFORM_0 < 1/2) ∧ UNIFORM_1 < 1/2
	Probability:  1/4
	Observations: ¬(0 ≠ 0 ∧ 1 ≠ 0)
	Observations Probability:  1
	Sigma: σ(bothHeads) = 0 ≠ 0 ∧ 1 ≠ 0, σ(firstCoin) = 0, σ(secondCoin) = 1
	Terminated: No
Path 3:
	Path Condition: ¬(UNIFORM_0 < 1/2) ∧ ¬(UNIFORM_1 < 1/2)
	Probability:  1/4
	Observations: ¬(0 ≠ 0 ∧ 0 ≠ 0)
	Observations Probability:  1
	Sigma: σ(bothHeads) = 0 ≠ 0 ∧ 0 ≠ 0, σ(firstCoin) = 0, σ(secondCoin) = 0
	Terminated: No
Path 4:
	Path Condition: UNIFORM_0 < 1/2 ∧ UNIFORM_1 < 1/2
	Probability:  1/4
	Observations: ¬(1 ≠ 0 ∧ 1 ≠ 0)
	Observations Probability:  0
	Sigma: σ(bothHeads) = 1 ≠ 0 ∧ 1 ≠ 0, σ(firstCoin) = 1, σ(secondCoin) = 1
	Terminated: No
real 0.28
user 0.23
sys 0.04
